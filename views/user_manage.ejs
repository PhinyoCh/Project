<%- include('./sidebar.ejs')  -%> 

    <main class="mt-5 pt-3 ">
      <div class="container-fluid">
          <div class="row">
            <div class="card">
              <div class="card-header bg-dark">
                <h3 class="text-uppercase text-center text-white mt-4">user manage</h3>
              </div>

              <div class="card-body">
                <div class="table-responsive">
                  <table id="table-user-id" class="table" style="width: 100%">
                      <div class="text-end">
                      <button type="submit" data-bs-toggle="modal" style="border-right-width: 0px;margin-right: 80px;" data-bs-target="#adduser-modal" class="btn btn-primary"><i class="bi bi-person-plus"></i> Add</button> 
                    </div>
                    <thead>                     
                      <tr>
                        <th class="text-center">USER ID</th>
                        <th class="text-center">USER ROLE</th>
                        <th class="text-center">NAME</th>
                        <th class="text-center">EMAIL</th>
                        <th class="text-center">USER NAME</th>
                        <th class="text-center">PASSWORD</th>
                        <th class="text-center">OPERACTION</th>
                      </tr>
                    </thead>
                    
                  </table>
                </div>
              </div>
            </div>
          </div>
      </div>

      <!-- ResetPassword Modal -->
      <div class="modal fade" id="repass-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Change Password</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="repass-form" class="needs-validation" novalidate>
              <div class="modal-body">
                <div class="form">
                  <div class="row">

                    <div class="col-md-12 mb-1">
                      <label for="user-name" class="form-label" >Username</label>
                      <input type="text" class="form-control" id="reusername" disabled>
                    </div>
                    <div class="col-md-12 mb-1">
                      <label for="password" class="form-label">Password</label>
                      <input type="password" class="form-control" id="input-repassword" required >
                      <div class="invalid-feedback">
                        Please Enter Password.
                      </div>
                    </div>                  
                    <div class="col-md-12 mb-1">
                      <label for="password" class="form-label">Password Again</label>
                      <input type="password" class="form-control" id="input-re-password-again" required >
                      <div class="invalid-feedback">
                        Please Enter Password Again.
                      </div>
                    </div>    
                  </div>
                  
                </div>                                   
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit-repass" class="btn btn-primary">ResetPassword</button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <!-- Modal ADD Button -->
      <div class="modal fade" id="adduser-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Add User</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="adduser-form" class="needs-validation" novalidate>
              <div class="modal-body">
                <div class="form">
                  <div class="row">
                    <div class="row">
                      <div class="col-md-6">
                        <label for="firstname" class="form-label">First Name</label>
                        <input type="text" class="form-control" id="input-addfirstname" required>
                        <div class="invalid-feedback">
                          Please Enter First Name.
                        </div>
                      </div>
                      <div class="col-md-6">
                        <label for="lastname" class="form-label">Last Name</label>
                        <input type="text" class="form-control" id="input-addlastname" required>
                        <div class="invalid-feedback">
                          Please Enter Last Name.
                        </div>
                      </div>                      
                    </div>

                    <div class="col-md-12 mb-1">
                      <label for="user-name" class="form-label" >Username</label>
                      <input type="text" class="form-control" id="input-addusername" required >
                      <div class="invalid-feedback">
                        Please Enter User Name.
                      </div>
                    </div>
                    <div class="col-md-12 mb-1">
                      <label for="password" class="form-label">Password</label>
                      <input type="password" class="form-control" id="input-addpassword" required >
                      <div class="invalid-feedback">
                        Please Enter Password.
                      </div>
                    </div>                    
                  </div>
                  <div class="col-md-12">
                    <label for="emil" class="form-label">Email</label>
                    <input type="email" class="form-control" id="input-addemail" required >
                    <div class="invalid-feedback">
                      Please Enter Email.
                    </div>
                  </div>
                  <div class="col-md-6 mb-3">
                    <label for="user-role" class="form-label"> User Role </label>
                    <select class="form-select" style="margin-top: 7px;margin-bottom: 7px;padding-top: 9px;padding-bottom: 9px;" id="input-addrole" required>
                      <option selected disabled value="">Select Role...</option>
                      <option value="1">STAFF</option>
                      <option value="2">ADMIN</option>
                    </select>
                    <div class="invalid-feedback">
                      Please select a role.
                    </div>
                  </div>
                </div>                                   
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit-adduser" class="btn btn-primary">Submit</button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <!-- Modal Edit Button -->
      <div class="modal fade" id="edit-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Edit User</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form  id="edit-form" class="needs-validation" novalidate>
              <div class="modal-body">
                <div class="form">
                  <div class="row">
                    <div class="row">
                      <div class="col-md-6">
                        <label for="firstname" class="form-label">First Name</label>
                        <input type="text" class="form-control" id="input-editfirstname" required>
                        <div class="invalid-feedback">
                          Please Enter First Name.
                        </div>
                      </div>
                      <div class="col-md-6">
                        <label for="lastname" class="form-label">Last Name</label>
                        <input type="text" class="form-control" id="input-editlastname" required>
                        <div class="invalid-feedback">
                          Please Enter Last Name.
                        </div>
                      </div>                      
                    </div>
                    <div class="col-md-12 mb-1">
                      <label for="user-name" class="form-label">Username</label>
                      <input type="text" class="form-control" id="input-editusername" disabled>
                    </div>                    
                  </div>
                  <div class="col-md-12">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" class="form-control" id="input-editemail" required >
                    <div class="invalid-feedback">
                      Please Enter Email.
                    </div>
                  </div>
                  <div class="col-md-6 mb-3">
                    <label for="user-role" class="form-label"> User Role </label>
                    <select class="form-select" style="margin-top: 7px;margin-bottom: 7px;padding-top: 9px;padding-bottom: 9px;" id="input-editrole" required>
                      <option selected disabled value="">Select Role...</option>
                      <option value="1">STAFF</option>
                      <option value="2">ADMIN</option>
                    </select>
                    <div class="invalid-feedback">
                      Please select a role.
                    </div>
                  </div>
                </div>                                   
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button id="submit-edit" type="submit-edit" class="btn btn-primary">Submit</button>
              </div>
            </form>
          </div>
        </div>
      </div>           
    </main>
  </body>
</html>

<script src="/public/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.0.2/dist/chart.min.js"></script>
<script src="/public/js/jquery-3.5.1.js"></script>
<script src="/public/js/jquery.dataTables.min.js"></script>
<script src="/public/js/dataTables.bootstrap5.min.js"></script>
<script src="/public/js/script.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap-switch-button@1.1.0/dist/bootstrap-switch-button.min.js"></script>
<link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap-switch-button@1.1.0/css/bootstrap-switch-button.min.css" rel="stylesheet">
<link href="//cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css" rel="stylesheet">
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
<link rel="stylesheet" href="/node_modules/@sweetalert2/themes/dark/dark.css">
<script src="/node_modules/sweetalert2//dist/sweetalert2.min.js"></script>

<script>
  var Feature = (function(){
      let glo_user_id;
      var dataTable = $('#table-user-id').DataTable({
        language : {emptyTable: "ไม่พบข้อมูล"},
        ordering: false,
        searching: false,
        lengthChange: false,
        paging: false,
        bAutoWidth: false,
        info: false,
        columns: [
          { 
            data: function (data) {
              return data['user_id'];                  // ข้อมูล ' ลำดับ '
            },
            className : 'text-center',              // จัดให้ข้อมูลอยู่ตรงกลาง
          },
          { 
            data: function (data) {
              if(data['user_role'] == 2){
                user_role = 'ADMIN';
              } else if(data['user_role'] == 1) {
                user_role = 'STAFF'
              } else {
                user_role = "not defined";
              }
              return user_role;  
            },
            className : 'text-center',              // จัดให้ข้อมูลอยู่ตรงกลาง
          },
          { 
            data: function (data) {
              sname = data['s_name'];
              lname = data['l_name'];
              return sname[0].toUpperCase()+ sname.slice(1) + " " +lname[0].toUpperCase()+ lname.slice(1);                  // ข้อมูล ' ลำดับ '
            },
            className : 'text-center',              // จัดให้ข้อมูลอยู่ตรงกลาง
          },
          { 
            data: function (data) {
              return data['email'];                  // ข้อมูล ' ลำดับ '
            },
            className : 'text-center',              // จัดให้ข้อมูลอยู่ตรงกลาง
          },
          { 
            data: function (data) {
              return data['username'];                  // ข้อมูล ' ลำดับ '
            },
            className : 'text-center',              // จัดให้ข้อมูลอยู่ตรงกลาง
          },
          { 
            data: function (data) {
              return '<button type="button" data-bs-toggle="modal" data-bs-target="#repass-modal" name="repass_data" class="btn btn-outline-info "\
              data-id="' + data['user_id'] + '" data-username="' + data['username'] + '">ResetPassword</button>';                  
            },
            className : 'text-center',              // จัดให้ข้อมูลอยู่ตรงกลาง
          },
          { 
            data: function (data) {
              return '<button type="submit" data-bs-toggle="modal" data-bs-target="#edit-modal" name="edit_data" class="btn btn-primary "\
              data-id="' + data['user_id'] + '" data-email="' + data['email'] + '" data-username="' + data['username'] + '"\
              data-s_name="' + data['s_name'] + '" data-l_name="' + data['l_name'] + '"\
              data-user_role="' + data['user_role'] +'"><i class="fa fa-edit"></i>Edit</button>\
              <button type="submit" name="delete_data" class="btn btn-danger" data-id="' + data['user_id'] + '"><i class="fa fa-trash"></i>Delete</button>';                  // ข้อมูล ' ลำดับ '
            },
            className : 'text-center',              // จัดให้ข้อมูลอยู่ตรงกลาง
          }
        ],
        serverSide: true,   // เปิดการรับ - ส่งข้อมูลของตาราง
        ajaxSource: '/usermanage/searchUser',   // path สำหรับการรับ - ส่งข้อมูล (service)
        serverData: function(sSource, aaData, fnCallback, oSettings) { // สร้าง function สำหรับการรับ - ส่งข้อมูล
            //aaData.push({ "name": "search", "value": aaSearch});     // กำหนดข้อมูลที่จะค้นหา
            oSettings.jqXHR = $.ajax({  // รับ - ส่งข้อมูลโดยใช้ ajax
                dataType: 'json',       // กำหนดรูปแบบข้อมูลเป็น json
                type: "POST",           // กำหนดประเภทการส่งแบบ POST
                url: sSource,           // path สำหรับการรับ - ส่งข้อมูล (ajaxSource)
                data: aaData,           // ข้อมูลที่ส่ง 
                success: function (response) {  // ถ้าติดต่อสำเร็จ
                   if(response === undefined){
                    response = {"aaData":[], "iTotalRecords": 0, "iTotalDisplayRecords": 0};    // จัดเรียงข้อมูลที่ได้รับใหม่ --> -->

                   }else{
                    response = {"aaData": response, "iTotalRecords": response.length, "iTotalDisplayRecords": response.length}; // จัดเรียงข้อมูลที่ได้รับใหม่                     
                   }
                    fnCallback(response);   // นำข้อมูลกลับขึ้นไป loop ใน columns
                }
            });
        }
      })
      return {
          getDateNow: function(){
            /* Update Date*/
            const now = new Date();                                                                     //
            const offsetMs = now.getTimezoneOffset() * 60 * 1000;                                       //
            const dateLocal = new Date(now.getTime() - offsetMs);                                       //  >> รับค่าวันที่และเวลา ปัจจุบัน
            const str = dateLocal.toISOString().slice(0, 19).replace(/-/g, "/").replace("T", " ");      //
                dateNow = str; 
              /**************/
            return dateNow;
          },

          onClickEditBtn : function (){
            $('#table-user-id').on('click', '[name="edit_data"]', function () {  // ปุ่ม 'แก้ไข' ของข้อมูลบุคลากรในแถวตารางข้อมูล
            var data = $(this).data();  // รับข้อมูลจากปุ่มแก้ไข ที่กดในแถวตารางข้อมูล
            glo_user_id = data.id;
            // set value
            $('#input-editfirstname').val(data.s_name);               // นำข้อมูล response ของรหัส RFID มาใส่ในฟอร์ม 'รหัส RFID' ข้อมูลบุคลากร
            $('#input-editlastname').val(data.l_name);     // นำข้อมูล response ของชื่อ มาใส่ในฟอร์ม 'ชื่อ' ข้อมูลบุคลากร
            $('#input-editusername').val( data.username);      // นำข้อมูล response ของนามสกุล มาใส่ในฟอร์ม 'นามสกุล' ข้อมูลบุคลากร
            $('#input-editemail').val(data.email);       // นำข้อมูล response ของรหัสพนักงานมาใส่ในฟอร์ม 'รหัสพนักงาน' ข้อมูลบุคลากร
            $("#input-editrole").val(data.user_role);                  // นำข้อมูล response ของรหัสผ่าน มาใส่ในฟอร์ม 'รหัสผ่าน' ข้อมูลบุคลากร
          });
          },

          onClickRepassBtn : function (){
            $('#table-user-id').on('click', '[name="repass_data"]', function () { 
            var data = $(this).data();  // รับข้อมูลจากปุ่ม ResetPassword
            glo_user_id = data.id;
            // set value
            $('#reusername').val( data.username);      // นำข้อมูล response ของ username มาใส่ในฟอร์ม username
          });
          },

          onClickRemoveBtn : function () {
            //delete
            $('#table-user-id').on('click', '[name="delete_data"]', function () {    // ปุ่ม 'ลบ' ของข้อมูลผุ้ใช้
              var data = $(this).data();
              var user_id = data.id; 
              Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to delete this User ?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
              }).then((result) => {
                if(result.isConfirmed){
                  $.ajax({ 
                    url: '/usermanage/PostRemoveUser',
                    data: {
                      "user_id": user_id,
                      "update_date":Feature.getDateNow(),
                    },
                    type: 'post',
                    success: function(response)
                    {
                      if(response.status == 'error self remove'){
                        Swal.fire({
                          icon: 'error',
                          title: 'Sorry...',
                          text: 'You cannot delete this user!'
                        })
                      } 
                      else if (response.status == 'successes'){
                        Swal.fire(
                          'Succeed!',
                          'User Deletion Succeeded.',
                          'success'
                        ).then(function(){
                          dataTable.ajax.reload();
                        });                          
                      }
                    }
                  });
                }         
              })                  
            });
          },    
          onSubmitEditUser : function(){
            'use strict'
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('#edit-form.needs-validation')     
            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
              .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                  if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                  } else {
                    event.preventDefault();
                    
                    let dateNow = Feature.getDateNow();
                    let s_name = $('#input-editfirstname').val();               
                    let l_name = $('#input-editlastname').val();     
                    let email = $('#input-editemail').val();       
                    let role = $("#input-editrole").val(); 
                    //var user_id = $('[name="edit_data"]').data('user_id');
                   
                    $.ajax({ 
                      url: '/usermanage/PostEditUser',
                      data: {
                        "user_id":glo_user_id,
                        "s_name":s_name,
                        "l_name":l_name,
                        "email":email,
                        "user_role":role,
                        "active":1,
                        "update_date":dateNow,
                      },
                      type: 'post',
                      success: function(response)
                      {                        
                        if(response.status == 'Failed'){
                          Swal.fire({
                            icon: 'error',
                            title: 'Sorry...',
                            text: "Can't edit this user."
                          })
                        } 
                        else if (response.status == 'successes'){
                          Swal.fire(
                            'Succeed!',
                            'User has been edit successfully.',
                            'success').then(function(){
                            $('#edit-modal').modal('toggle');
                            dataTable.ajax.reload();
                          });
                          }
                        }
                      });
                  }      
                  form.classList.add('was-validated')
                  
                }, false)
              })
          }, 
          
          onSubmitRePassword:  function(){
            'use strict'
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            
            var forms = document.querySelectorAll('#repass-form.needs-validation')     
            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
              .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                  if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                  }else{
                    event.preventDefault();
                    let dateNow = Feature.getDateNow();
                    let username = $('#input-addusername').val();
                    let password = $('#input-repassword').val(); 
                    let repass =  $('#input-re-password-again').val(); 
                    if (password === repass){
                      Swal.fire(
                        'Succeed!',
                        'Error',
                        'success');
                        $.ajax({ 
                          url: '/usermanage/ResetPasswordUser',
                          data: {
                            "user_id":glo_user_id,
                            "password":password,
                            "update_date":dateNow
                          },
                        type: 'post',
                        success: function(response)
                        { 
                          if(response.status == 'Failed'){
                            Swal.fire({
                              icon: 'error',
                              title: 'Sorry...',
                              text: "Please enter a password with more than 8 characters."}).then(function(){
                                $('#input-repassword').val(''); 
                                $('#input-re-password-again').val('');  
                                $('#repass-modal').modal('toggle');
                                dataTable.ajax.reload();
                              });
                            } 
                            else if (response.status == 'Successes'){
                              Swal.fire(
                                'Succeed!',
                                'The password has been corrected.',
                                'success').then(function(){
                                $('#repass-modal').modal('toggle');
                                dataTable.ajax.reload();
                              });
                            }
                          }
                        });
                    }else{
                      Swal.fire(
                          'Sorry',
                          'Please enter your password to match.',
                          'error').then(function(){
                            $('#input-repassword').val(''); 
                            $('#input-re-password-again').val(''); 
                            $('#repass-modal').modal('toggle');
                            dataTable.ajax.reload();
                          });
                        }
                    form.classList.add('was-validated')
                    
                    }
                  }, false)  
              })
          },

          onSubmitAddUser:  function(){
            'use strict'
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('#adduser-form.needs-validation')     
            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
              .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                  if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                  }else{
                    event.preventDefault();
                    let dateNow = Feature.getDateNow();
                    let s_name = $('#input-addfirstname').val();               // นำข้อมูล response ของรหัส RFID มาใส่ในฟอร์ม 'รหัส RFID' ข้อมูลบุคลากร
                    let l_name = $('#input-addlastname').val();     // นำข้อมูล response ของชื่อ มาใส่ในฟอร์ม 'ชื่อ' ข้อมูลบุคลากร
                    let username = $('#input-addusername').val();
                    let password = $('#input-addpassword').val();  
                    let email = $('#input-addemail').val();       // นำข้อมูล response ของรหัสพนักงานมาใส่ในฟอร์ม 'รหัสพนักงาน' ข้อมูลบุคลากร
                    let role = $("#input-addrole").val(); 
                    var user_id = $('[name="delete_data"]').data('id');
                    $.ajax({ 
                      url: '/usermanage/AddUserAccount',
                      data: {
                        "user_id":user_id,
                        "s_name":s_name,
                        "l_name":l_name,
                        "username":username,
                        "password":password,
                        "email":email,
                        "user_role":role,
                        "active":1,
                        "update_date":dateNow,
                        "create_date":dateNow,
                      },
                    type: 'post',
                    success: function(response)
                    { 
                      if(response.status == 'Failed'){
                        Swal.fire({
                          icon: 'error',
                          title: 'Sorry...',
                          text: "Can't add this user."}).then(function(){
                            $('#input-addfirstname').val('');               // นำข้อมูล response ของรหัส RFID มาใส่ในฟอร์ม 'รหัส RFID' ข้อมูลบุคลากร
                            $('#input-addlastname').val('');     // นำข้อมูล response ของชื่อ มาใส่ในฟอร์ม 'ชื่อ' ข้อมูลบุคลากร
                            $('#input-addusername').val('');
                            $('#input-addpassword').val('');  
                            $('#input-addemail').val('');       // นำข้อมูล response ของรหัสพนักงานมาใส่ในฟอร์ม 'รหัสพนักงาน' ข้อมูลบุคลากร
                            $("#input-addrole").val('');
                            $('#adduser-modal').modal('toggle');
                            dataTable.ajax.reload();
                          });
                        } 
                      
                        else if (response.status == 'Successes'){
                          Swal.fire(
                            'Succeed!',
                            'User has been added successfully.',
                            'success').then(function(){
                            $('#adduser-modal').modal('toggle');
                            dataTable.ajax.reload();
                          });
                        }
                      }
                    });
                    }
                  form.classList.add('was-validated')
                  
                }, false)
              })
          }
      }
  })();

  jQuery(document).ready(function(){
    Feature.onClickEditBtn();
    Feature.onClickRemoveBtn();
    Feature.onSubmitEditUser();
    Feature.onSubmitAddUser();
    Feature.onClickRepassBtn();
    Feature.onSubmitRePassword();
  });


  

</script>

